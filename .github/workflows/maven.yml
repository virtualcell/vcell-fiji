# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - "*"
    release:
      types: [published, edited]



jobs:

  build:
    runs-on: ubuntu-latest



#    https://docs.github.com/en/actions/using-containerized-services/about-service-containers
    services:
      s3proxy:
        image: andrewgaul/s3proxy
        ports:
          - 4000:80
        env:
          JCLOUDS_FILESYSTEM_BASEDIR: /data
          S3PROXY_AUTHORIZATION: none
          JCLOUDS_PROVIDER: filesystem
        volumes:
          - /dockerImage/data:/data

    steps:
    - uses: actions/checkout@v3

    - name: Put test resources in S3Proxy Container
      run: |
        cp -r ${{ github.workspace }}/src/test/resources /dockerImage/data

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    #Before building the Repo a docker container needs to intialized such that the test cases can work properly
#    https://github.com/addnab/docker-run-action


    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
